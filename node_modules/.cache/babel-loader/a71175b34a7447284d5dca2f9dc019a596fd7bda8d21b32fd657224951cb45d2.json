{"ast":null,"code":"var _jsxFileName = \"/Users/laurynetranchant/Documents/react/movie-project/src/Api.js\";\nimport { Component } from 'react';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/*function Api(props) {\n  const navigate = useNavigate();\n\n  function handleClick(movieId) {\n    navigate.push(`/movie/${movieId}`);\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>{props.title}</h1>\n      <div className=\"wrapper-movies\">\n        {props.items.map((item) => (\n          <div\n            key={item.id}\n            className=\"movie-container\"\n            onClick={() => handleClick(item.id)}\n          >\n            <h2 className='container-movie-title'>{item.title || item.name}</h2>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${item.poster_path || item.profile_path}`}\n              alt={item.title || item.name}\n              className=\"poster\"\n            />\n            <p className=\"overview\">{item.overview}</p>\n            <p className='vote-average'>{item.vote_average}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Api;*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Api extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n  componentDidMount() {\n    fetch(this.props.api).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json.results\n      });\n    });\n  }\n  render() {\n    let {\n      isLoaded,\n      items\n    } = this.state;\n    console.log(items);\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }, this);\n    } else {\n      /*function handleClick() {\n        console.log('it works');\n      }*/\n\n      const navigate = useNavigate();\n      function handleClick(movieId) {\n        navigate.push(`/movie/${movieId}`);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper-movies\",\n          children: [items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-container\",\n            onClick: () => handleClick(item.id),\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"container-movie-title\",\n              children: item.title || item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w500${item.poster_path || item.profile_path}`,\n              alt: item.title || item.name,\n              className: \"poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"overview\",\n              children: item.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"vote-average\",\n              children: item.vote_average\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this)), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this);\n    }\n  }\n}\nexport default Api;","map":{"version":3,"names":["Component","React","useNavigate","jsxDEV","_jsxDEV","Api","constructor","props","state","items","isLoaded","componentDidMount","fetch","api","then","res","json","setState","results","render","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","navigate","handleClick","movieId","push","className","title","map","item","onClick","id","name","src","poster_path","profile_path","alt","overview","vote_average"],"sources":["/Users/laurynetranchant/Documents/react/movie-project/src/Api.js"],"sourcesContent":["import { Component } from 'react';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/*function Api(props) {\n  const navigate = useNavigate();\n\n  function handleClick(movieId) {\n    navigate.push(`/movie/${movieId}`);\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>{props.title}</h1>\n      <div className=\"wrapper-movies\">\n        {props.items.map((item) => (\n          <div\n            key={item.id}\n            className=\"movie-container\"\n            onClick={() => handleClick(item.id)}\n          >\n            <h2 className='container-movie-title'>{item.title || item.name}</h2>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${item.poster_path || item.profile_path}`}\n              alt={item.title || item.name}\n              className=\"poster\"\n            />\n            <p className=\"overview\">{item.overview}</p>\n            <p className='vote-average'>{item.vote_average}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Api;*/\n\n \nclass Api extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        items: [],\n        isLoaded: false,\n      }\n    }\n  \n    componentDidMount() {\n      fetch(this.props.api)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json.results,\n        })\n      });\n    }\n  \n    render() {\n      let { isLoaded, items } = this.state;\n      console.log(items);\n  \n      if (!isLoaded) {\n        return <div>Loading...</div>\n      } else {\n        /*function handleClick() {\n          console.log('it works');\n        }*/\n\n        const navigate = useNavigate();\n\n        function handleClick(movieId) {\n          navigate.push(`/movie/${movieId}`);\n        }\n\n        return (\n          <div className=\"app\">\n            <h1>{this.props.title}</h1>\n            <div className=\"wrapper-movies\">\n              {items.map(item => (\n                  <div key={item.id} className=\"movie-container\" onClick={() => handleClick(item.id)}>\n                    <h2 className='container-movie-title'>{item.title ||Â item.name}</h2>\n                    <img src={`https://image.tmdb.org/t/p/w500${item.poster_path || item.profile_path}`} alt={item.title || item.name} className=\"poster\"/>\n                    <p className=\"overview\">{item.overview}</p>\n                    <p className='vote-average'>{item.vote_average}</p>\n                  </div>\n                ))};\n            </div>\n          </div>\n        );\n      }\n    }\n}\n\nexport default Api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}